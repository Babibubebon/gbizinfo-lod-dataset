name: Build dataset

on:
  schedule:
    - cron: "0 0 * * 0"
  workflow_dispatch:
    inputs:
      version:
        description: version to be built
        required: false
        type: string
      run_id:
        description: run_id of the uploaded artifact
        required: false
        type: string

jobs:
  download:
    if: github.event_name != 'workflow_dispatch' || github.event.inputs.version == ''
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - id: version
        name: Store version
        run: echo "version=v$(date +%Y%m%d)" >> $GITHUB_OUTPUT
      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install gbizinfo-lod
        run: pip install gbizinfo-lod
      - name: Download CSV files
        run: gbilod download --sleep 1 . && rm Kihonjoho_UTF-8.csv
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.version.outputs.version }}
          path: "*.csv"

  build:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: download
    if: ${{ !cancelled() && !failure() }}
    steps:
      - run: df -hT
      - run: lscpu
      - name: Set version from download step
        run: echo "version=${{ needs.download.outputs.version }}" >> $GITHUB_ENV
        if: github.event.inputs.version == ''
      - name: Set version from inputs
        run: echo "version=${{ github.event.inputs.version }}" >> $GITHUB_ENV
        if: github.event.inputs.version != ''
      - name: Set artifact_run_id
        run: echo "artifact_run_id=${{ github.run_id }}" >> $GITHUB_ENV
        if: github.event.inputs.version == ''
      - name: Set artifact_run_id from inputs
        run: echo "artifact_run_id=${{ github.event.inputs.run_id }}" >> $GITHUB_ENV
        if: github.event.inputs.version != ''
      - uses: actions/checkout@v4
      - run: |
          git tag $version
          git push origin $version
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ env.version }}
          tag_name: ${{ env.version }}
          files: README.md
          body_path: README.md

      - name: Install Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: Install gbizinfo-lod
        run: pip install gbizinfo-lod
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.version }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ env.artifact_run_id }}
      - name: Convert CSV files to RDF
        run: mkdir -p rdf && gbilod convert -f nq -p 4 -c -o rdf . && rm -f *.csv
      - name: Count triples
        run: |
          for F in *.nq.gz; do echo "- $F: $(printf "%'d" $(pigz -dc -f < "$F" | wc -l)) quads" >> summary.txt ; done
        working-directory: ./rdf
      - name: Split large files
        run: |
          pigz -dc hojin.nq.gz | split -C 20G -a 1 -d --verbose --filter="pigz -9 > \$FILE.nq.gz" - "hojin.part" \
          && rm hojin.nq.gz \
          && pigz -dc tokkyo.nq.gz | split -C 20G -a 1 -d --verbose --filter="pigz -9 > \$FILE.nq.gz" - "tokkyo.part" \
          && rm tokkyo.nq.gz
        working-directory: ./rdf
      - run: |
          git tag $version
          git push origin $version
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          name: ${{ env.version }}
          tag_name: ${{ env.version }}
          files: ./rdf/*.nq.gz
          body_path: ./rdf/summary.txt
